#!/bin/bash

glog() {
  # Parse options
  local file_filter=""
  local args=()
  while [[ $# -gt 0 ]]; do
    case "$1" in
      -h|--help)
        if [[ -f "$(dirname "$0")/glog.help" ]]; then
            echo -e "$(cat "$(dirname "$0")/glog.help")"
        else
            echo "Help file not found"
        fi
        return 0
        ;;
      -f)
        shift
        if [[ -z "$1" ]]; then
          echo "glog: -f requires a file or folder argument" >&2
          return 1
        fi
        file_filter="$1"
        shift
        ;;
      *)
        args+=("$1")
        shift
        ;;
    esac
  done

  local log_args=("${args[@]}")
  if [[ -n "$file_filter" ]]; then
    log_args+=("--" "$file_filter")
  fi

  git log --graph --color=always \
    --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "${log_args[@]}" |
  fzf --ansi --reverse --tiebreak=begin,index \
    --algo=v2 \
    --exact \
    --bind=ctrl-s:toggle-sort \
    --bind='ctrl-f:change-preview-window(right,80%:wrap)+change-prompt(🔍 Filter commits > )' \
    --bind='ctrl-l:clear-query' \
    --bind='ctrl-u:half-page-up,ctrl-d:half-page-down' \
    --bind='ctrl-/:toggle-preview' \
    --bind='ctrl-y:execute-silent(echo git checkout $(echo {} | grep -o "[a-f0-9]\{7\}" | head -1) | pbcopy)+preview:echo "Copied: git checkout <commit>"' \
    --layout=reverse \
    --prompt='🔍 Search commits > ' \
    --header='Type to fuzzy-search commits. Ctrl-/: toggle preview, Ctrl-S: sort, Ctrl-F: focus filter, Ctrl-L: clear, Ctrl-Y: copy checkout command, Enter: show details' \
    --preview="echo {} | grep -o '[a-f0-9]\{7\}' | head -1 | xargs -I % git show --color=always --stat %" \
    --preview-window=right:60%:wrap \
    --bind "ctrl-m:execute:
      (grep -o '[a-f0-9]\{7\}' | head -1 |
      xargs -I % sh -c 'git show --color=always % | less -R') << 'FZF-EOF'
      {}
FZF-EOF"
}
# UX: Uses --algo=v2 and --exact for more relevant search results. Tiebreak prioritizes matches at the start.
# UX: Ctrl-Y copies 'git checkout <commit>' for the selected commit to clipboard (macOS pbcopy). Consider xclip for Linux.
# UX: -f option restricts log to a file/folder, making it easy to browse history for a path.

glog "$@"