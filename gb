#!/bin/bash

# Git branch creator with type selection
# Creates new branch with conventional naming: type/jake/name or type/jake/uuid

if [[ "$1" == "--help" || "$1" == "-h" ]]; then
    cat << 'EOF'
gb - Interactive git branch creator with conventional naming

USAGE:
    gb [--help|-h]

DESCRIPTION:
    Interactive tool for creating new git branches with conventional naming
    patterns. Prompts for branch type and name, creating branches in the
    format: jake/<type>/<name>

BRANCH TYPES:
    1. fix    - For bug fixes
    2. feat   - For new features
    3. nit    - For small improvements/nitpicks

NAMING PATTERNS:
    jake/fix/user-auth-bug          # Named branch
    jake/feat/new-dashboard         # Named branch
    jake/nit/a1b2c3d4               # Auto-generated UUID

EXAMPLES:
    gb                              # Start interactive branch creation
    gb --help                       # Show this help

FEATURES:
    • Interactive type selection
    • Automatic name generation if none provided
    • Consistent naming convention
    • Automatic checkout to new branch

REQUIREMENTS:
    • git
    • openssl (for UUID generation)
EOF
    exit 0
fi

echo "Branch type:"
echo "1) fix"
echo "2) feat"
echo "3) nit"
read -p "Select (1-3): " choice

case $choice in
    1) type="fix" ;;
    2) type="feat" ;;
    3) type="nit" ;;
    *) echo "Invalid choice"; exit 1 ;;
esac

read -p "Branch name (leave empty for random): " name

if [ -z "$name" ]; then
    # Generate random UUID-like string (8 chars)
    name=$(openssl rand -hex 4)
else
    # Replace spaces with hyphens
    name=$(echo "$name" | tr ' ' '-')
fi

branch_name="jake/${type}/${name}"
git checkout -b "$branch_name"
echo "Created and switched to branch: $branch_name"
